<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.duodian.dao.OrderbillMapper">
  <resultMap id="BaseResultMap" type="com.example.duodian.model.Orderbill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="lawer" jdbcType="INTEGER" property="lawer" />
    <result column="user" jdbcType="INTEGER" property="user" />
    <result column="entrust" jdbcType="INTEGER" property="entrust" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createDate, status, lawer, user, entrust, money, remark
  </sql>
  <select id="selectByExample" parameterType="com.example.duodian.model.OrderbillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderbill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderbill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderbill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.duodian.model.OrderbillExample">
    delete from orderbill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.duodian.model.Orderbill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orderbill (createDate, status, lawer, 
      user, entrust, money, 
      remark)
    values (#{createdate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{lawer,jdbcType=INTEGER}, 
      #{user,jdbcType=INTEGER}, #{entrust,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.duodian.model.Orderbill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orderbill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createdate != null">
        createDate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lawer != null">
        lawer,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="entrust != null">
        entrust,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lawer != null">
        #{lawer,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        #{user,jdbcType=INTEGER},
      </if>
      <if test="entrust != null">
        #{entrust,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.duodian.model.OrderbillExample" resultType="java.lang.Long">
    select count(*) from orderbill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderbill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lawer != null">
        lawer = #{record.lawer,jdbcType=INTEGER},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=INTEGER},
      </if>
      <if test="record.entrust != null">
        entrust = #{record.entrust,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderbill
    set id = #{record.id,jdbcType=INTEGER},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      lawer = #{record.lawer,jdbcType=INTEGER},
      user = #{record.user,jdbcType=INTEGER},
      entrust = #{record.entrust,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.duodian.model.Orderbill">
    update orderbill
    <set>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="lawer != null">
        lawer = #{lawer,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="entrust != null">
        entrust = #{entrust,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.duodian.model.Orderbill">
    update orderbill
    set createDate = #{createdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      lawer = #{lawer,jdbcType=INTEGER},
      user = #{user,jdbcType=INTEGER},
      entrust = #{entrust,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>